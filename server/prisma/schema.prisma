generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  firstName     String
  lastName      String
  password      String
  role          String       @default("user") // could be admin, doctor, or user
  active        Boolean      @default(true)
  doctorProfile Doctor?      @relation("UserDoctor") // Nullable relation to Doctor
  appointments  Appointment[]

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Doctor {
  id            Int          @id @default(autoincrement())
  userId        Int          @unique
  user          User         @relation("UserDoctor", fields: [userId], references: [id])
  specialty     String
  appointments  Appointment[]
  timeSlots     TimeSlot[]

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Appointment {
  id        Int       @id @default(autoincrement())
  userId    Int
  doctorId  Int
  timeSlotId Int
  user      User      @relation(fields: [userId], references: [id])
  doctor    Doctor    @relation(fields: [doctorId], references: [id])
  timeSlot  TimeSlot  @relation(fields: [timeSlotId], references: [id])
  status    String    @default("pending") // pending, confirmed, cancelled
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model TimeSlot {
  id          Int          @id @default(autoincrement())
  doctorId    Int
  doctor      Doctor       @relation(fields: [doctorId], references: [id])
  startTime   DateTime
  endTime     DateTime
  isBlocked   Boolean      @default(false)
  appointments Appointment[]
}
